<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <link rel="icon" type="image/png" href="/images/favicon.ico">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

  <title>Workspace</title>

  <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />
    <script src="http://s.codepen.io/assets/libs/modernizr.js" type="text/javascript"></script>    
    <link rel="stylesheet" href="/stylesheets/reset.css">
    <link rel='stylesheet prefetch' href='http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/themes/smoothness/jquery-ui.css'>
        <link rel="stylesheet" href="/stylesheets/style.css">
    <link href='http://fonts.googleapis.com/css?family=Gloria+Hallelujah' rel='stylesheet' type='text/css'>

    <!-- Bootstrap core CSS     -->
    <link href="/stylesheets/bootstrap.min.css" rel="stylesheet" />



    <!--  Light Bootstrap Table core CSS    -->
    <link href="/stylesheets/light-bootstrap-dashboard.css" rel="stylesheet"/>


    <!--  CSS for Demo Purpose, don't include it in your project     -->
    <link href="/stylesheets/demo.css" rel="stylesheet" />


    <!--     Fonts and icons     -->
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,700,300' rel='stylesheet' type='text/css'>
    <link href="/stylesheets/pe-icon-7-stroke.css" rel="stylesheet" />

    <link rel="stylesheet" href="/stylesheets/jsplumb/css/jsPlumbToolkit-defaults.css">
    <link rel="stylesheet" href="/stylesheets/jsplumb/css/main.css">
    <link rel="stylesheet" href="/stylesheets/jsplumb/css/jsPlumbToolkit-demo.css">
    <link rel="stylesheet" href="/stylesheets/workspace/workspace.css">

</head>
<body>
<div id="myModal" class="modal">

  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">x</span>
    <!-- <form name="containerOptions" id="containerOptions"> -->
    <label>Container ID:  </label><label id="container-id"></label><br/>
    Container Name*:  <input id="container-name" type="text" size=10 maxlength=10 required="required"/>
    <div style="position:absolute;left:25px;">
    <form enctype="application/json" action="javascript:test()">
        <input type="hidden" name="config[apiVersion]" value="v1"/>
        <input type="hidden" name="config[]kind" value="ReplicationController"/>
        <div style="width:100%;display:table;">
          <div style="display:table-row;"> 
            <div style="display:table-cell;width:50%">Metadata:<br/>
              <ul>
                <li>Name     :<input type="text" name="config[metadata][name]"/><br/></li>
                <li>Labels   :<input type="text" name="config[metadata][labels]"/><br/></li>
                <li>Namespace:<input type="text" name="config[metadata][namespace]"/><br/></li>    
              </ul>
            </div>
            <div style="display:table-cell;width:50%"> Spec:<br/>
              <ul>
                <li>Spec: Replicas     :<input type="text" name="config[spec][replicas]"/><br/></li>
                <li>Spec: Selector     :<input type="text" name="config[spec][selector]"/><br/></li>
                <li>Spec: Template     :<br/>
                  <ul>
                    <li>Spec: Template: Metadata: Labels:<input type="text" name="config[spec][template][metadata][labels]"/></li>
                  </ul>
                </li>
              </ul>
            </div>
          </div>
          <div style="display:table-row;width:100%;text-align: center;">
                Pod Specification:
          </div>
          <div style="display:table-row;">
                <div style="display:table-cell;width:50%">
                    <ul>
                      <li>Name :<input type="text" name="config[spec][template][spec][containers][name]"/><br/></li>
                      <li>Image:<input type="text" name="config[spec][template][spec][containers][image]"/><br/></li>
                      <li>Command:<br/>
                        <ul>
                          <li><input type="text" name="config[spec][template][spec][containers][command][0]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][command][1]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][command][2]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][command][3]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][command][4]"/><br/></li>
                        </ul>
                      </li>
                      <li>Arguments:<br/>
                        <ul>
                          <li><input type="text" name="config[spec][template][spec][containers][args][0]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][args][1]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][args][2]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][args][3]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][args][4]"/><br/></li>
                        </ul>
                      </li>
                      <li>Environment (Name:Value):<br/>
                        <ul>
                          <li><input type="text" name="config[spec][template][spec][containers][env][0][name]"/>:<input type="text" name="config[spec][template][spec][containers][env][0][value]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][env][1][name]"/>:<input type="text" name="config[spec][template][spec][containers][env][1][value]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][env][2][name]"/>:<input type="text" name="config[spec][template][spec][containers][env][2][value]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][env][3][name]"/>:<input type="text" name="config[spec][template][spec][containers][env][3][value]"/><br/></li>
                          <li><input type="text" name="config[spec][template][spec][containers][env][4][name]"/>:<input type="text" name="config[spec][template][spec][containers][env][4][value]"/><br/></li>
                        </ul>
                      </li></ul>
                </div>
                <div style="display:table-cell;">
                  <ul>
                      <li>Ports:<br/>
                        <ul>
                          <li>
                            <ul>
                              <li>Container Port:<input type="text" name="config[spec][template][spec][containers][ports][0][containerPort]"/><br/></li>
                              <li>Name:<input type="text" name="config[spec][template][spec][containers][ports][0][name]"/><br/></li>
                              <li>Protocol(TCP/UDP):<input type="text" name="config[spec][template][spec][containers][ports][0][protocol]"/><br/></li>
                            </ul>
                          </li>
                          <li>
                            <ul>
                              <li>Container Port:<input type="text" name="config[spec][template][spec][containers][ports][1][containerPort]"/><br/></li>
                              <li>Name:<input type="text" name="config[spec][template][spec][containers][ports][1][name]"/><br/></li>
                              <li>Protocol(TCP/UDP):<input type="text" name="config[spec][template][spec][containers][ports][1][protocol]"/><br/></li>
                            </ul>
                          </li>
                          <li>
                            <ul>
                              <li>Container Port:<input type="text" name="config[spec][template][spec][containers][ports][2][containerPort]"/><br/></li>
                              <li>Name:<input type="text" name="config[spec][template][spec][containers][ports][2][name]"/><br/></li>
                              <li>Protocol(TCP/UDP):<input type="text" name="config[spec][template][spec][containers][ports][2][protocol]"/><br/></li>
                            </ul>
                          </li>
                          <li>
                            <ul>
                              <li>Container Port:<input type="text" name="config[spec][template][spec][containers][ports][3][containerPort]"/></li>
                              <li>Name:<input type="text" name="config[spec][template][spec][containers][ports][3][name]"/></li>
                              <li>Protocol(TCP/UDP):<input type="text" name="config[spec][template][spec][containers][ports][3][protocol]"/></li>
                            </ul>
                          </li>
                          <li>
                            <ul>
                              <li>Container Port:<input type="text" name="config[spec][template][spec][containers][ports][4][containerPort]"/><br/></li>
                              <li>Name:<input type="text" name="config[spec][template][spec][containers][ports][4][name]"/><br/></li>
                              <li>Protocol(TCP/UDP):<input type="text" name="config[spec][template][spec][containers][ports][4][protocol]"/><br/></li>
                            </ul>
                          </li>
                        </ul>
                      </li>
                      <li>
                        <br/><br/><br/>
                        <button type="submit" id="modal-create" onclick="modal_create()"  > Create </button>
                        <button type="submit" id="modal-save" onclick="modal_save()" style="visibility:hidden;" > Save </button>
                      </li>
                    </ul>
                </div>
            </div>
          <!-- </li> -->
        </div> <br/>  
        
      </form>     
               
    </div>
            
            
  </div></div>
<div class="main-panel">
        <nav class="navbar navbar-default navbar-fixed">
            
            <div class="container-fluid">
                <div id="stage" style="background:#00008B">
                        <h3 id="spinner" style="background: #4d4dff; text-align: center; color: #fff;">PAWN</h3>
                    </div>
                
                <div class="collapse navbar-collapse">
                    
                    <ul class="nav navbar-nav navbar-left" style="position:absolute;right:20px;top:10px;">
                        <li>
                           <a href="/">
                               Home
                            </a>
                        </li>
                        <li>
                           <a href="/dashboard">
                               Dashboard
                            </a>
                        </li>
                        <li>
                           <a href="/projects">
                               Projects
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        
    </div>
<div class="wrapper">
    <div class="sidebar" data-color="azure" data-image="/images/sidebar-5.jpg">

    <!--

        Tip 1: you can change the color of the sidebar using: data-color="blue | azure | green | orange | red | purple"
        Tip 2: you can also add an image using data-image tag

    -->

      <div class="sidebar-wrapper" >
                <h3 style="position:absolute;left:75px;color:black;">Images</h3>
            <ul class="nav" style="position:absolute;left:80px;top:50px;">
                
                <li class="active">
                    <p onclick="openNav()">Angular js <br><img id="drag1" style="background:#222;" src="/images/a.jpg" draggable="true" ondragstart="drag(event)" onclick="clicked(this)" width="90" height="75"></p>
                </li>
                <li>
                    <p onclick="openNav1()">Facebook<br><img id="drag2" style="background:#339;" src="/images/f.png" draggable="true" ondragstart="drag(event)" onclick="clicked(this)" width="90" height="75"></p>
                </li>
                <li>
                    <p onclick="openNav2()">Mongo db<br><img id="drag3" style="background:#090;" src="/images/m.png" draggable="true" ondragstart="drag(event)" onclick="clicked(this)" width="90" height="75"></p>
                </li>
                <li>
                   <p onclick="openNav3()">Node js<br><img id="drag4" style="background:#500;" src="/images/n.jpg" draggable="true" ondragstart="drag(event)" onclick="clicked(this)" width="90" height="75"></p>
                </li>
                <li>
                   <p onclick="openNav4()">Sql<br><img id="drag5" style="background:#888;" src="/images/s.png" draggable="true" ondragstart="drag(event)" onclick="clicked(this)" width="90" height="75"></p>
                </li>
                
            </ul>
      </div>
    </div>
  
    <div id="wrapper" ondrop="drop(event)" ondragover="allowDrop(event)"; style="position:absolute;top:68px;left:280px;" >
              <div class="jtk-demo-main" id="workspace-canvas">
        <!-- demo -->
        <div class="jtk-demo-canvas canvas-wide flowchart-demo jtk-surface jtk-surface-nopan" id="canvas">

          <div class="" id="kitchensink-demo">


               
                <div id="c3_1" class="w node" data-nodetype="container" ondblclick="openConfig(this)" style="left:30px;top:35px">3.1</div>
                <div id="c3_2" class="w node" data-nodetype="container" ondblclick="openConfig(this)" style="left:80px;top:162px">3.2</div>
            

           
            <div class="w node" id="standalone" data-nodetype="standalone" ondblclick="openConfig(this)" style="left:455px;top:280px;display:none;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>

           </div>
            
        </div>
        
    </div>
        </p>
        <ul style="position:absolute;top:10px;right:10px;">
             <li><button type="submit" onclick="save_diagram()" style="height:40px;width:60px;"><a href="#save"><strong>Save   </strong></a> </button></li>
             <li><button type="submit" onclick="clear_diagram()" style="height:40px;width:60px;"><a href="#clear"><strong>Clear </strong> </a></button></li>
             <li><button type="submit" onclick="loadFlowchart()" style="height:40px;width:60px;"><a href="#load"><strong>Load </strong></a></button></li>
             <li><button type="submit" style="height:40px;width:60px;"><a href="dashboard.ejs"><strong>Exit</strong></a></button></li>
        </ul>
            
    </div>
   

    </div>
    
    

</body>

    <!--   Core JS Files   -->
<script src="/javascripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="/javascripts/bootstrap.min.js" type="text/javascript"></script>

  <!--  Checkbox, Radio & Switch Plugins -->
<script src="/javascripts/bootstrap-checkbox-radio-switch.js"></script>

  <!--  Charts Plugin -->
<script src="/javascripts/chartist.min.js"></script>


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>

    <!-- Light Bootstrap Table Core javascript and methods for Demo purpose -->
<script src="/javascripts/light-bootstrap-dashboard.js"></script>

  <!-- Light Bootstrap Table DEMO methods, don't include it in your project! 
  <script src="/javascripts/demo.js"></script>
   JS -->
<!-- support lib for bezier stuff -->
<script src="/javascripts/jsplumb/lib/jsBezier-0.8.js"></script>
<!-- event adapter -->
<script src="/javascripts/jsplumb/lib/mottle-0.7.4.js"></script>
<!-- geometry functions -->
<script src="/javascripts/jsplumb/lib/biltong-0.3.js"></script>
<!-- drag -->
<script src="/javascripts/jsplumb/lib/katavorio-0.18.0.js"></script>
<!-- jsplumb util -->
<script src="/javascripts/jsplumb/src/util.js"></script>
<script src="/javascripts/jsplumb/src/browser-util.js"></script>
<!-- main jsplumb engine -->
<script src="/javascripts/jsplumb/src/jsPlumb.js"></script>
<!-- base DOM adapter -->
<script src="/javascripts/jsplumb/src/dom-adapter.js"></script>
<script src="/javascripts/jsplumb/src/overlay-component.js"></script>
<!-- endpoint -->
<script src="/javascripts/jsplumb/src/endpoint.js"></script>
<!-- connection -->
<script src="/javascripts/jsplumb/src/connection.js"></script>
<!-- anchors -->
<script src="/javascripts/jsplumb/src/anchors.js"></script>
<!-- connectors, endpoint and overlays  -->
<script src="/javascripts/jsplumb/src/defaults.js"></script>
<!-- bezier connectors -->
<script src="/javascripts/jsplumb/src/connectors-bezier.js"></script>
<!-- state machine connectors -->
<script src="/javascripts/jsplumb/src/connectors-statemachine.js"></script>
<!-- flowchart connectors -->
<script src="/javascripts/jsplumb/src/connectors-flowchart.js"></script>
<!-- straight connectors -->
<script src="/javascripts/jsplumb/src/connectors-straight.js"></script>
<!-- SVG renderer -->
<script src="/javascripts/jsplumb/src/renderers-svg.js"></script>

<!-- common adapter -->
<script src="/javascripts/jsplumb/src/base-library-adapter.js"></script>
<!-- no library jsPlumb adapter -->
<script src="/javascripts/jsplumb/src/dom.jsPlumb.js"></script>

<script src="/javascripts/jsplumb/src/group.js"></script>

<script src="/javascripts/workspace/workspace.js"></script>

<script type="text/javascript">

  var numberOfElements = 4;
  var containerID;
   var anchors = [
                    [0.5, 1, 0.5, 0.5]//,
                    // [0.8, 1, 0, 1],
                    // [0, 0.8, -1, 0],
                    // [0.2, 0, 0, -1]
                  ];
  var shouldntHappen = function() {
    console.log('THIS SHOULDN HAPPEN');
  };
  function allowDrop(ev)
  {
    ev.preventDefault();
  }
  function drag(ev)
  {
    ev.dataTransfer.setData("Text",ev.target.id);
  }
  function drop(ev)
  {
    containerID="cont_"+ Math.floor(Math.random((Math.random() * 10000) + 1)*10000);
    document.getElementById("container-id").innerHTML=containerID;
    document.getElementById("modal-create").style.visibility='visible';
    document.getElementById("modal-save").style.visibility='hidden';
    modal.style.display = "block";
  }

//This function is called after the modal is submitted successfullly
  var cloneStandalone = function(name){
    var newbox = dragMe.cloneNode(true);
    newbox.id=containerID
    newbox.style.display = "block";
    newbox.innerHTML=name+'<br/>'+containerID;
    newbox.style=document.getElementById("standalone").style;
    document.getElementById('canvas').appendChild(newbox);
    var j = window.j;
    j.draggable(newbox.id);

//Anchors for the newly dropped node
    var exampleDropOptions = {
      tolerance: "touch",
      hoverClass: "dropHover",
      activeClass: "dragActive"
    };
    var color2 = "#316b31";
    var exampleEndpoint2 = {
      endpoint: ["Dot", { radius: 5 }],
      paintStyle: { fill: color2 },
      isSource: true,
      scope: "green",
      connectorStyle: { stroke: color2, strokeWidth: 6 },
      connector: ["Bezier", { curviness: 63 } ],
      maxConnections: 3,
      isTarget: true,
      dropOptions: exampleDropOptions
    };

    j.addEndpoint(newbox.id, { anchor: anchors}, exampleEndpoint2);
  }

//This function is called when a node is dropped
  var modal_create = function() {
//Get all the values from the modal box and save it in the sessionStorage of the browser
//***********
    var containername = document.getElementById("container-name").value;

//End - values from modal box
    cloneStandalone(containername);
    modal.style.display = "none";
    updateSessionValues(containerID,containername);
//var obj = JSON.parse(sessionStorage.user);

  }
  var modal_save = function(){
//***************
    var name = document.getElementById("container-name").value;
    var id = document.getElementById("container-id").value;
    document.getElementById(id).innerHTML=name+'<br/>'+id;
    updateSessionValues(id,name);
    modal.style.display = "none";
  }

//Element that is to be cloned!
  var dragMe = document.getElementById('standalone');
  var modal = document.getElementById('myModal');
// Get the button that opens the modal
  var btn = document.getElementById("myBtn");
// Get the <span> element that closes the modal
  var span = document.getElementsByClassName("close")[0];

  span.onclick = function() {
    modal.style.display = "none";
  }

    
  var save_diagram=function(){
    //Save the entire diagram !!!
    saveFlowchart();
  }

  var openConfig=function(cont){
    var obj = JSON.parse(sessionStorage.getItem(cont.id));
    updateModalValues(obj.id,obj.name);
    document.getElementById("modal-create").style.visibility='hidden';
    document.getElementById("modal-save").style.visibility='visible';
    modal.style.display = "block";
  }

//Update the values of the modal with the passed values!! This avoids a lot of repeatition!
  var updateModalValues=function(id,name){
    document.getElementById("container-id").value=id;
    document.getElementById("container-name").value=name;
  }
//Update the values of the modal with the passed values!! This avoids a lot of repeatition!
  var updateSessionValues=function(id,name){
    var containerConfig = {
                            'id':id,
                            'name':name
                          };
    sessionStorage.setItem(id, JSON.stringify(containerConfig));
  }
  var endpoints = [];
  function saveFlowchart(){
    
    var nodes = []
    var jsPlumb = window.j;
    $(".node:not(#standalone)").each(function (idx, elem) {
    var $elem = $(elem);
    console.log($elem.css);
    endpoints.push(jsPlumb.getEndpoints($elem.attr('id')));
    console.log('endpoints of '+$elem.attr('id'));
    console.log(endpoints);
      nodes.push({
        blockId: $elem.attr('id'),
        nodetype: $elem.attr('data-nodetype'),
        positionX: parseInt($elem.css("left"), 10),
        positionY: parseInt($elem.css("top"), 10)
      });
    });
    
    var connections = [];
    
    $.each(jsPlumb.getAllConnections(), function (idx, connection) {
      connections.push({
        connectionId: connection.id,
        pageSourceId: connection.sourceId,
        pageTargetId: connection.targetId
      });
    });
    
    var flowChart = {};
    flowChart.nodes = nodes;
    flowChart.connections = connections;
    flowChart.numberOfElements = numberOfElements;
    
    flowChartJson = JSON.stringify(flowChart);
    console.log(flowChartJson);

    //savedObj = jsPlumb.save({selector : ".node:not(#standalone)" });
    
    //$('#jsonOutput').val(flowChartJson);

//End of save function
  }
  var flowChartJson;
  var savedObj
  //var jsPlumbInst = window.j;
  function loadFlowchart(){

    var jsPlumb = window.j;
    //var flowChartJson = $('#jsonOutput').val();
    var flowChart = JSON.parse(flowChartJson);
    var nodes = flowChart.nodes;
    function repositionElement(id, posX, posY, eindex){
      var dragMe = document.getElementById('standalone');
      var newbox = dragMe.cloneNode(true);
      console.log(newbox.style.left);
      console.log(dragMe.style.left);
      newbox.id=id
      newbox.style.display = "block";
      newbox.style=document.getElementById("standalone").style;
    
      newbox.innerHTML=id;

      newbox.style.position= "absolute";
      newbox.style.left=''+posX+'px';
      newbox.style.top=''+posY+'px';

      console.log(posX);
      console.log(newbox.style.left);
      document.getElementById('kitchensink-demo').appendChild(newbox);
      console.log(newbox.style.left);

      document.getElementById(id).style.position="absolute";
      document.getElementById(id).style.left=''+posX+'px';
      document.getElementById(id).style.top=''+posY+'px';
    
      

      var exampleDropOptions = {
        tolerance: "touch",
        hoverClass: "dropHover",
        activeClass: "dragActive"
      };
      var color2 = "#316b31";
      var exampleEndpoint2 = {
        endpoint: ["Dot", { radius: 5 }],
        paintStyle: { fill: color2 },
        isSource: true,
        scope: "green",
        connectorStyle: { stroke: color2, strokeWidth: 6 },
        connector: ["Bezier", { curviness: 63 } ],
        maxConnections: 3,
        isTarget: true,
        dropOptions: exampleDropOptions
      };

      var e1 = j.addEndpoint(newbox.id, {anchor: anchors,uuid:id}, exampleEndpoint2);
      jsPlumb.draggable(newbox.id);
      
  }
  $.each(nodes, function( index, elem ) {
    // if(elem.nodetype === 'startpoint'){
      console.log(elem.blockId);

       repositionElement(elem.blockId, elem.positionX, elem.positionY,index);
    // }else if(elem.nodetype === 'endpoint'){
    //   repositionElement('endpoint', elem.positionX, elem.positionY);
    // }else if(elem.nodetype === 'task'){
    //   var id = addTask(elem.blockId);
    //   repositionElement(id, elem.positionX, elem.positionY);
    // }else if(elem.nodetype === 'decision'){
    //   var id = addDecision(elem.blockId);
    //   repositionElement(id, elem.positionX, elem.positionY);
    // }else{
      
    // }

  });
              
  var connections = flowChart.connections;
  $.each(connections, function( index, elem ) {
   
     var connection1 = jsPlumb.connect({
      // source: elem.pageSourceId,
      // target: elem.pageTargetId,
      // anchors: anchors
      uuids:[elem.pageSourceId,elem.pageTargetId]
    });
  });
  
  numberOfElements = flowChart.numberOfElements;
  
//End of load function
  }
  var clear_diagram=function(){
    var jsPlumb = window.j;

    $(".node:not(#standalone)").each(function () {
            jsPlumb.detachAllConnections($(this));
            jsPlumb.unmakeTarget($(this), false);
            jsPlumb.removeAllEndpoints($(this));
        });
    // var conns = jsPlumb.getAllConnections();
    // for (var i = 0; i < conns.length; i++)
    // jsPlumb.detach(conns[i]);
    // jsPlumb.removeAllEndpoints(someElement or element Id);
    $(".node:not(#standalone)").remove();
  }


//MODAL JQUERY COMMANDS!!!
      $('#build').click(function(){
        
      });
      $('#image').click(function(){
        
      });
    function test(){alert($(config));}

</script>
</html>
